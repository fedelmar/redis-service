name: Redis container example
on: push

jobs:
  # Etiqueta del trabajo del contenedor
  container-job:
    # Los contenedores deben ejecutarse en sistemas operativos basados en Linux
    runs-on: ubuntu-latest
    # Imagen de Docker Hub que `container-job` ejecuta en el contenedor: node:10.18-jessie

    # Contenedores de servicio para ejecutar con `container-job`
    services:
      redis:
      # Etiqueta usada para acceder al contenedor de servicio   redis:
        # Imagen del contenedor Docker Hub
        image: redis
        # Establece revisiones de estado para esperar hasta que Redis haya comenzado
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Descarga una copia del c칩digo en tu repositorio antes de ejecutar pruebas de CI
      - name: Check out repository code
        uses: actions/checkout@v2

      # Realiza una instalaci칩n limpia de todas las dependencias en el archivo `package.json`
      # Para obtener m치s informaci칩n, consulta https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Connect to Redis
        # Ejecuta un script que crea un cliente Redis, rellena
        # el cliente con datos y recupera datos
        run: node client.js
        # Variable de entorno utilizada por el script `client.js` para crear un nuevo cliente Redis.
        env:
          # El nombre del host utilizado para comunicarse con el contenedor de servicio Redis
          REDIS_HOST: redis
          # El puerto Redis predeterminado
          REDIS_PORT: 6379